version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: ${POSTGRES_IMAGE:-postgres:15-alpine}
    container_name: ${PROJECT_NAME}-db
    environment:
      POSTGRES_DB: ${DB_NAME:-odoo}
      POSTGRES_USER: ${DB_USER:-odoo}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - odoo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-odoo} -d ${DB_NAME:-odoo}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Cache Redis
  redis:
    image: ${REDIS_IMAGE:-redis:7-alpine}
    container_name: ${PROJECT_NAME}-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - odoo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicaci√≥n Odoo
  odoo:
    image: ${ODOO_IMAGE:-odoo:${PROJECT_NAME}-${ODOO_VERSION}}
    container_name: ${PROJECT_NAME}-odoo
    environment:
      - HOST=${DB_HOST:-db}
      - PORT=${DB_PORT:-5432}
      - USER=${DB_USER:-odoo}
      - PASSWORD=${DB_PASSWORD}
      - DATABASE=${DB_NAME:-odoo}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - ODOO_RC=/etc/odoo/odoo.conf
    volumes:
      - odoo_data:/var/lib/odoo
      - ./addons:/mnt/extra-addons:ro
      - ./etc:/etc/odoo:ro
      - ./logs:/var/log/odoo
    ports:
      - "${ODOO_PORT:-8069}:8069"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - odoo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8069/web/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Administrador de base de datos (solo desarrollo)
  pgadmin:
    image: ${PGADMIN_IMAGE:-dpage/pgadmin4:latest}
    container_name: ${PROJECT_NAME}-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    depends_on:
      - db
    networks:
      - odoo_network
    restart: unless-stopped
    profiles:
      - development

volumes:
  postgres_data:
    name: ${PROJECT_NAME}-postgres-data
  redis_data:
    name: ${PROJECT_NAME}-redis-data
  odoo_data:
    name: ${PROJECT_NAME}-odoo-data
  pgadmin_data:
    name: ${PROJECT_NAME}-pgadmin-data

networks:
  odoo_network:
    name: ${PROJECT_NAME}-network
    driver: bridge
